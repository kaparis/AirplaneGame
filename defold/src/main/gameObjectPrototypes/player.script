spawned_bullets = {}

screenWidth = tonumber(sys.get_config("display.width"))
screenHeight = tonumber(sys.get_config("display.height"))


function init(self)
	-- Add initialization code here
	-- Remove this function if not needed
	-- Remove this function if not needed
	print ("player.script - init")
	
	self.velocity = vmath.vector3(0, 0, 0)
	
	-- this tells the engine to send input to on_input() in this script
    msg.post(".", "acquire_input_focus")   
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
	
	msg.post(".", "release_input_focus")
end

function update(self, dt)
	-- Add update code here
	-- Remove this function if not needed
	
	 -- apply velocity to the player character
    go.set_position(go.get_position() + self.velocity * dt)

    -- reset volatile state
    self.correction = vmath.vector3()
    
	-- update the positions of enemies
    for i, bullet in ipairs(spawned_bullets) do
		local pos = go.get_position(bullet)
        pos.y = pos.y + (200 * dt)            
        go.set_position(pos, bullet)
	
		-- remove enemies when they pass off the screen
        if pos.y > 900 then 
            table.remove(spawned_bullets, i)
            go.delete(bullet)
        end
    end
 
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Remove this function if not needed
	
	print("player.script - on_message: " .. message_id)
	
	if message_id == hash("collision_response") then
    	if message.group == hash("enemy") then	
    		msg.post("main:/loader#gui-proxy", "load")
        end
    end
    
    -- After we loaded GUI collection, this confirms to enable it on the screen,
    -- then unload the level collection.
    if message_id == hash("proxy_loaded") then
        -- The collection has loaded and it's time to enable it.
        msg.post(sender, "enable")
        msg.post("main:/loader#level001-proxy", "unload")

    end
    
end

function on_input(self, action_id, action)
	-- Add input-handling code here
	-- Remove this function if not needed
	
	if action_id == hash("left") then
		if action.pressed then
			local pos = go.get_position()		
        	if pos.x > 0 then
        		--pos.x = pos.x - 10    
        		--go.set_position(pos, p)
        		self.velocity = vmath.vector3(-100, 0, 0)
        	end
		elseif action.released then
			self.velocity = vmath.vector3(0, 0, 0)
		end
	end
	
	if action_id == hash("right") then
		if action.pressed then
			local pos = go.get_position()		
			if pos.x < screenWidth then
        		--pos.x = pos.x + 10    
        		--go.set_position(pos, p)
        		self.velocity = vmath.vector3(100, 0, 0)
        	end
		elseif action.released then
			self.velocity = vmath.vector3(0, 0, 0)
		end
	end
	
	if action_id == hash("fire") then
		if action.pressed then
			fireBullet(self)
		elseif action.released then
			-- abort the move
		end
	end
	
	if action_id == hash("down") then
		if action.pressed then
			-- exit game
		elseif action.released then
			-- abort the move
		end
	end
	
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end


function fireBullet(self)	
	local pos = go.get_position()
	local component = "#bulletFactory"
	
	local id = factory.create(component, pos)	
	table.insert(spawned_bullets,id)
	
	print "fired"
end
